-> 在 ES6 中新增啦 箭头函数
    - 写法介绍
        1) () => 1+1;
            - 1.在没有 参数的 情况下 使用（） 代表函数的传参  以箭头和大于号 与函数体进行连接
            - 在只有一句 函数体的情况 可以不使用 花括号 如果 含有多条那么就需要使用啦
            - 没有 花括号 的情况下  默认返回 函数体的值  
        2) a => a*3;
            - 在一个参数的情况下 可以将括号省略 直接参数名
        3) (a,b) => {
            if( a != undefined && b != undefined ) {
                return a * b;
            }
        }
            - 在 需要 传入 多个形参的时候 那么需要使用（）进行包含啦 函数体有多条语句 使用花括号包含啦
    - 使用介绍 -- 箭头函数不同 场景 中this的指向
        - 在对象中 以成员的身份 使用箭头函数 
            obj = {
                fn:()=> console.log( this ); //window
            }
            - 那么箭头函数中的this 不会 执行 对象 
            - 原因：
                1. 因为箭头函数是匿名函数 那么 那么使用 var 变量进行 指向的 
                2. 对象的 语句作用域 无法限制 var 那么箭头函数的 this会向上进行查找 
                3. 当找到 能够限制 起范围的作用域 看当前作用域 属于那个对象 
                4. 那么其  this 就会 指向 它
        - 我们在 对象 的声明式 函数 成员 中进行使用 箭头函数 看箭头函数中的this 执行什么
            obj2 = {
                name: 'xiaoming',
                tese: function () {
                    var fn = () => console.log( this ); // obj2
                }
            }
            - 那么我们在 声明式 函数中 进行使用 箭头函数 其this为什么执行了 obj2对象呢
            -原因：
                1. 因为我们在 声明式（function） 函数中 使用箭头函数
                2. 它 可以限制箭头函数  产生作用域
                3. 那么 箭头函数被限制 就会看 作用域属于那么个 对象
                4. 那么 其 this 就会 指向该对象啦