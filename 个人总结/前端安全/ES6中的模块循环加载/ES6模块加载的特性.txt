-> ES6 中 模块加载的特性 
    - ES6 加载 模块特性
        1) 我们查看 main.js 和 a.js文件 我们 难 发现  两次输出的结果并不是相同的
        2) 那是因为 ES6 中加载 模块的不同性
            - ES6 中加载 模块 读取到 import {a} from './a.js' 不会去 执行 a.js文件
            - 会在 一个 有代码使用 引入的模块 时 去加载 模块呢
            - 那么在没有加载 之前 变量a 只是指向 模块文件的地址
            - 那么在 再次 引用的情况下 我们会再次的去加载 模块文件 
            - 所以 我们在 1000 毫秒 后 模块变量 那么就会去加载 模块
            - 那么就获取到 模块 中 变化后的值啦
    - 和 commonJs不同的
        - commonJS 是 加载一次 后就会不找 模块进行再次的加载啦
        - 那么去 找到 加载 模块 缓存的对象啦
        - 那么我们使用 commonJS 是获取到 模块中 变化后的值啦
    - 由于ES6 模块 加载 需要在浏览器执行
        - 但是浏览器 有无法 直接进行解析 那么就需要shiy使用 loader 包进行转换语法
        - 使用 Babel 进行语法的转换 或者使用 webpack 进行解析
-> 
    -
        1)
            -
